/**
 * Created by jahv on 2017/5/6.
 */
import React, {cloneElement} from "react";
import ReactDom from "react-dom";
import injectTapEventPlugin from "react-tap-event-plugin";
import MuiThemeProvider from "material-oak/styles/MuiThemeProvider";
import TextField from 'material-oak/TextField';
import SelectField from 'material-oak/SelectField';
import MenuItem from 'material-oak/MenuItem';
import AutoComplete from 'material-oak/AutoComplete';
import {Table, TableType} from '../../src';
injectTapEventPlugin();

const position = [
    {textKey: '医生', valueKey: '医生', inputCode: "YS"},
    {textKey: '护士', valueKey: '护士', inputCode: "HS"},
    {textKey: '护士长', valueKey: '护士长', inputCode: "HSZ"},
    {textKey: '主治医师', valueKey: '主治医师', inputCode: "ZZYS"},
    {textKey: '院长', valueKey: '院长', inputCode: "YZ"},
    {textKey: '管理员', valueKey: '管理员', inputCode: "GLY"},
];

const dataSourceConfig = {
    text: 'textKey',
    value: 'valueKey',
};

const data = {
    head: [
        [{
            source: 'id',
            text: '序号',
        }, {
            type: <TextField/>,
            source: 'name',
            text: '姓名'
        }, {
            type: (
                <SelectField>
                    <MenuItem value={1} primaryText="女"/>
                    <MenuItem value={2} primaryText="男"/>
                    <MenuItem value={3} primaryText="未知"/>
                </SelectField>
            ),
            source: 'sex',
            text: '性别'
        }, {
            type: (<AutoComplete
                hintText="请选择职位"
                dataSource={position}
                openOnFocus={true}
                dataSourceConfig={dataSourceConfig}/>),
            source: 'position',
            text: '职位'
        },]
    ],
    data: [{
        id: 1,
        name: "张三"
    }, {
        id: 2,
    }]
};
const formatType = {
    SelectField(column, body){
        return cloneElement(column.type, {
            value: body[column.source] || "",
            name: column.source,
            onChange: (event, index, value) => {
                body[column.source] = value;
                this.setState(this.state);
            },
            onClick(e){
                e.stopPropagation();
                e.preventDefault();
            }
        })
    },
    AutoComplete(column, body){
        return cloneElement(column.type, {
            value: body[column.source] || "",
            searchText: body[column.source] || "",
            filter: (searchText, key, data) => {
                return data.inputCode.startsWith(searchText.toUpperCase());
            },
            name: column.source,
            onUpdateInput: (searchText) => {
                body[column.source] = searchText;
                this.setState(this.state);
            },
            onClick(e){
                e.stopPropagation();
                e.preventDefault();
            }
        })
    }
};

ReactDom.render((
    <MuiThemeProvider><Table data={data} formatType={formatType}/></MuiThemeProvider>
), document.getElementById('example'));