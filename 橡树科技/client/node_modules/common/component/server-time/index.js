"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by jahv on 2017/7/4.
 */
var serverTimeDiff = null;
var fetchTimeCount = 0;

function fetchServerDate() {
  var fetchTime = new Date().getTime();
  fetch("/comm/comm/loadNowDate/").then(function (json) {
    fetchTimeCount++;
    if (json.success) {
      var time = Date.parse(json.data);
      console.log("\u83B7\u53D6\u5230\u670D\u52A1\u5668\u65F6\u95F4\u4E3A\uFF1A" + time);
      serverTimeDiff = new Date() - time;
      console.log("\u670D\u52A1\u5668\u65F6\u95F4\u7EC4\u4EF6\u521D\u59CB\u5316\u5B8C\u6210\uFF0C\u76EE\u524D\u4E0E\u670D\u52A1\u5668\u65F6\u95F4\u5DEE\u4E3A\uFF1A" + serverTimeDiff + "\u6BEB\u79D2");
      if (serverTimeDiff < 10000) {
        console.log("\u56E0\u4E3A\u548C\u670D\u52A1\u5668\u65F6\u95F4\u5DEE\u5C0F\u4E8E10\u79D2\uFF0C\u5FFD\u7565\u65F6\u95F4\u5DEE");
        serverTimeDiff = 0;
      } else {
        serverTimeDiff -= new Date() - fetchTime;
        console.log("\u51CF\u53BB\u83B7\u53D6\u670D\u52A1\u5668\u65F6\u95F4\u8BF7\u6C42\u7684\u65F6\u95F4" + fetchTime + "\u6BEB\u79D2\uFF0C\u6700\u7EC8\u548C\u670D\u52A1\u5668\u65F6\u95F4\u5DEE\u4E3A\uFF1A" + serverTimeDiff);
      }
    } else {
      if (fetchTimeCount > 3) {
        alert("无法读取到服务器时间，请联系管理员！给您带来不便敬请谅解!");
        fetch.command("quit()");
      } else {
        setTimeout(fetchServerDate, 30);
      }
    }
  });
}

fetchServerDate();

var ServerDate = function (_Date) {
  (0, _inherits3.default)(ServerDate, _Date);

  function ServerDate() {
    (0, _classCallCheck3.default)(this, ServerDate);

    if (serverTimeDiff === null) throw "时间组件还未初始化，请延时操作";
    return (0, _possibleConstructorReturn3.default)(this, (ServerDate.__proto__ || (0, _getPrototypeOf2.default)(ServerDate)).call(this, new Date().getTime() + serverTimeDiff));
  }

  return ServerDate;
}(Date);

exports.default = ServerDate;
module.exports = exports["default"];