/**
 * Created by jahv on 2017/4/11.
 */
import {User} from "./user";
import qs from "qs";

window._fetch = window.fetch;
let serverHost = "";

function getServerHost() {
  if(serverHost) return Promise.resolve(serverHost);
  return _fetch('/public/debug.json').then(res => res.ok ? res.json() : "获取配置文件失败").then(json => {
    serverHost = json.server_host;
    return serverHost;
  });
}
window.fetch = (url, args) => {
    console.log("fetch start!");
    return getServerHost().then(data=>{
        console.log(data);
        url = "http://" + data + url;
        console.log(url);
        if (!args) args = {};
        if (!args.method) args.method = 'GET';
        if (!args.headers) args.headers = {};
        if (User.isLogin()) {
            args.headers['token'] = User.token();
        }
        args.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
        if (args.param) {
            if (args.method === "GET" || args.method === "HEAD") {
                url = url.indexOf("?") > 0 ? "&" : "?" + qs.stringify(args.param)
            } else {
                args.body = qs.stringify(args.param);
                delete args.param;
            }
        }
        return _fetch(url, args).then(res => {
            if (res.ok) {
                let contentType = res.headers.get("content-type");
                if (contentType && contentType.startsWith("application/json")) {
                    return res.json();
                } else {
                    return res.text();
                }
            }
            return {error: true, msg: "网络繁忙，请稍候再试！"};
        }).catch((err => console.error.bind(console)));
    })
};

export const fetch = window.fetch;